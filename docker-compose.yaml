version: '3.8'

services:
  # Сервис для вашего основного приложения
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: request-system-app
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      migrations:
        condition: service_completed_successfully
    networks:
      - request-system

  # Сервис для выполнения миграций базы данных
  migrations:
    build:
      context: .
      dockerfile: Dockerfile.migrations
    env_file:
      - .env
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - request-system

  # Сервис базы данных PostgreSQL
  postgresql:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: request-system
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      # Это для автоматического создания пользователя Ivan@example.com при первом старте
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d request-system"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - request-system

  # Сервис для админки базы данных pgAdmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "2M8bP@example.com"
      PGADMIN_DEFAULT_PASSWORD: "pasword"
    ports:
      - "5050:80"
    volumes:
      - ./servers.json:/pgadmin4/servers.json
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgresql
    networks:
      - request-system

  # Сервис Redis
  redis:
    image: redis:latest
    container_name: redis_for_request_system
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - request-system

# Общие настройки сети
networks: 
  request-system:
    driver: bridge

# Настройки для сохранения данных между перезапусками
volumes:
  pg_data: 
  redis_data:
  pgadmin_data: